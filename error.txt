@Configuration
public class IntegrationErrorHandlingConfig {


@Configuration
public class IntegrationConfig {

    @Bean
    public MessageChannel inputChannel() {
        return MessageChannels.direct().get();
    }

    @Bean
    public MessageChannel errorChannel() {
        return MessageChannels.direct().get();
    }

    @Bean
    public IntegrationFlow mainFlow() {
        return IntegrationFlows.from("inputChannel")
                .handle(message -> {
                    throw new RuntimeException("Simulated exception");
                })
                .get();
    }

    @Bean
    public IntegrationFlow errorHandlingFlow() {
        return IntegrationFlows.from("errorChannel")
                .handle(message -> System.err.println("Error: " + message.getPayload()))
                .get();
    }
}









////////////////////////////////////////////////////////////////////////////////////////////////

    @Bean
    public IntegrationFlow batchIntegrationFlow() {
        return IntegrationFlows.from("inputChannel")
                .handle((payload, headers) -> {
                    // Simulate business logic error
                    throw new RuntimeException("Error in processing");
                })
                .channel("outputChannel")
                .get();
    }

    @Bean(name = "inputChannel")
    public MessageChannel inputChannel() {
        return new DirectChannel();
    }

    @Bean(name = "outputChannel")
    public MessageChannel outputChannel() {
        return new DirectChannel();
    }

    @Bean
    public MessageChannel errorChannel() {
        return new DirectChannel();
    }

    @Bean
    public LoggingHandler errorHandler() {
        LoggingHandler handler = new LoggingHandler("ERROR");
        handler.setLoggerName("BatchErrorLogger");
        return handler;
    }

@Bean(name = "errorChannel")
public MessageChannel errorChannel() {
    return new DirectChannel();
}

@Bean
public LoggingHandler errorLogger() {
    LoggingHandler loggingHandler = new LoggingHandler(LoggingHandler.Level.ERROR);
    loggingHandler.setLoggerName("IntegrationErrorLogger");
    return loggingHandler;
}

@Bean
public IntegrationFlow errorHandlingFlow() {
    return IntegrationFlows.from("errorChannel")
            .handle(errorLogger())
            .get();
}

}
